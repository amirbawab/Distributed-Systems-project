apply plugin: 'application'
version = '1.0'
mainClassName = "application.ResourceManagerImpl"

dependencies {
    compile project(':remote')
}

/**
 * Task for running rmiregistry on server host
 */
task rmiregistry(type: Exec) {
    doFirst {
        // Set the working directory to the classpath
        workingDir "${sourceSets.main.java.outputDir}"

        // Check if running on windows
        if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
            throw new GradleException('The program was not tested on Windows.\nPlease start rmiregistry manually: ' +
                    "start rmiregistry ${serverPort}")
        } else {
            println "Starting rmiregistry at port ${serverPort} ..."
        }
    }

    commandLine "rmiregistry", serverPort
}

/**
 * Configure application run task
 */
run {

    // Configure server.policy file
    doFirst {
        copy {
            from "${rootDir}/etc/policy/"
            into "${buildDir}"
            include 'server.policy'
            expand('classpath': "${sourceSets.main.java.outputDir}")
        }
    }

    // Set the application and JVM arguments
    args "${serverPort}"
    jvmArgs([
            "-Djava.security.policy=${project.buildDir}/java.policys",
            "-Djava.rmi.server.codebase=file:${sourceSets.main.java.outputDir}"
    ])
}

// Managing dependencies
//run.dependsOn(rmiregistry)
